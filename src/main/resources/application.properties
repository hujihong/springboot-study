
########################################################
###EMBEDDED SERVER CONFIGURATION(ServerProperties)
########################################################
server.port=8080
#server.address= # bind to aspecific NIC
#server.session-timeout= # sessiontimeout in seconds
#the context path, defaults to '/'
#server.context-path=/spring-boot
#server.servlet-path= # the servletpath, defaults to '/'
#server.tomcat.access-log-pattern=# log pattern of the access log
#server.tomcat.access-log-enabled=false# is access logging enabled
#server.tomcat.protocol-header=x-forwarded-proto# ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
#server.tomcat.basedir=/tmp # basedir (usually not needed, defaults to tmp)
#server.tomcat.background-processor-delay=30;# in seconds
#server.tomcat.max-threads = 0 #number of threads in protocol handler
#server.tomcat.uri-encoding = UTF-8# character encoding to use for URL decoding

#spring.datasource.url = jdbc:mysql://localhost:3306/test
#spring.datasource.username = admin
#spring.datasource.password = qweasdzxc
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.max-active=20
#spring.datasource.max-idle=8
#spring.datasource.min-idle=8
#spring.datasource.initial-size=10


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 主数据源，默认的
# spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=admin
spring.datasource.password=admin123!@#QWE

# 更多数据源
custom.datasource.names=ds1,ds2,ds3
#custom.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
custom.datasource.ds1.driverClassName =com.mysql.jdbc.Driver
custom.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
custom.datasource.ds1.username=admin
custom.datasource.ds1.password=admin123!@#QWE

#custom.datasource.ds2.type=com.zaxxer.hikari.HikariDataSource
custom.datasource.ds2.driverClassName =com.mysql.jdbc.Driver
custom.datasource.ds2.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
custom.datasource.ds2.username=admin
custom.datasource.ds2.password=admin123!@#QWE

#custom.datasource.ds3.type=com.zaxxer.hikari.HikariDataSource
custom.datasource.ds3.driverClassName =com.mysql.jdbc.Driver
custom.datasource.ds3.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf-8
custom.datasource.ds3.username=admin
custom.datasource.ds3.password=admin123!@#QWE


# 下面为连接池的补充设置，应用到上面所有数据源中

spring.datasource.maximum-pool-size=100
spring.datasource.max-idle=10
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=18800

# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROMDUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database=MYSQL
# Show or not log for each sqlquery
spring.jpa.show-sql=true
# Hibernate ddl auto(create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy #org.hibernate.cfg.DefaultNamingStrategy]
# spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them tothe entity manager)
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# Spring针对Hibernate的非JPA实现用的是OpenSessionInViewFilter
spring.jpa.open-in-view=true

# 资源名称md5方式
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
# ResourceUrlProviderController
# <scripttype="text/javascript" src="${urls.getForLookupPath('/js/demo.js') }"></script>
# 如果使用的thymeleaf模板引擎的话，那么需要这么进行编写：
# <scripttype="text/javascript" th:src="${urls.getForLookupPath('/js/demo.js') }"></script>


########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
#spring.thymeleaf.content-type=text/html
# set to false for hot refresh
# spring.thymeleaf.cache=false
spring.thymeleaf.enabled=true


########################################################
###FREEMARKER (FreeMarkerAutoConfiguration)
########################################################
spring.freemarker.allow-request-override=false
spring.freemarker.cache=true
spring.freemarker.check-template-location=true
spring.freemarker.charset=UTF-8
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=false
spring.freemarker.expose-session-attributes=false
spring.freemarker.expose-spring-macro-helpers=false
spring.freemarker.prefix=
#spring.freemarker.request-context-attribute=request
#spring.freemarker.settings.*=
spring.freemarker.suffix=.ftl
spring.freemarker.template-loader-path=classpath:/templates/
#comma-separatedlist
#spring.freemarker.view-names=#whitelistofviewnamesthatcanberesolved

# 1、在application.properties添加如下信息：
# spring.freemarker.request-context-attribute=request
# 2、在x.ftl文件中进行使用：
# ${request.contextPath}可获取contextPath


#########jsp
# 页面默认前缀目录
spring.mvc.view.prefix=/WEB-INF/jsp/
# 响应页面默认后缀
spring.mvc.view.suffix=.jsp
spring.thymeleaf.cache=false


application.hello=HelloAngel From application


wisely2.name=wyf2
wisely2.gender=male2

path.filePathLocation = /Users/hujh/Desktop/tmp

# 数组
wisely2.employs[0]=张三
wisely2.employs[1]=李四
wisely2.employs[2]=王五

# 随机字符串
wisely2.value=${random.value}
# 随机int
wisely2.number=${random.int}
# 随机long
wisely2.bignumber=${random.long}
# 10以内的随机数
wisely2.test1=${random.int(10)}
# 10-20的随机数
wisely2.test2=${random.int[10,20]}

# spring.main.show-banner=false

info.app.name=ecs
info.app.version=1.0.0
info.build.artifactId=@project.artifactId@
info.build.version=@project.version@


########################################################
###REDIS (RedisProperties) redis基本配置；
########################################################
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
spring.redis.password=4uuKm84GMsEmIR4E
#connection port
spring.redis.port=6379
# pool settings ...
# spring.redis.pool.max-idle=8
# spring.redis.pool.min-idle=0
# spring.redis.pool.max-active=8
# spring.redis.pool.max-wait=-1
# name of Redis server
#spring.redis.sentinel.master=
# comma-separated list of host:portpairs
#spring.redis.sentinel.nodes=


pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params.count=countSql


#######################################################
###mail setting
########################################################
# 设置邮箱主机
spring.mail.host=smtp.163.com
# 设置用户名
spring.mail.username=jhhu_deng
# 设置密码
spring.mail.password=hujihong
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true


logging.level.com.boot.study=INFO


########################################################
### i18n setting.
########################################################
#指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename=i18n/messages
#设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-seconds= 3600
#设定Message bundles的编码，默认: UTF-8
#spring.messages.encoding=UTF-8


# MONGODB (MongoProperties)
# spring.data.mongodb.authentication-database= # Authentication database name.
# Database name.
spring.data.mongodb.database=admin
# spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.
# spring.data.mongodb.grid-fs-database= # GridFS database name.
# Mongo server host.
spring.data.mongodb.host=127.0.0.1
# Mongo server port.
spring.data.mongodb.port=27017
# Enable Mongo repositories.
# spring.data.mongodb.repositories.enabled=true
# Mongo database URI. When set, host and port are ignored.
# spring.data.mongodb.uri=mongodb://117.78.49.179:10005/test
# Login user of the mongo server.
spring.data.mongodb.username=****
# Login password of the mongo server.
spring.data.mongodb.password=****



# RABBIT (RabbitProperties)

# connection host
# spring.rabbitmq.host=117.78.49.179
# connection port
# spring.rabbitmq.port=5673
# connection addresses (e.g. myhost:9999,otherhost:1111)
# spring.rabbitmq.addresses=
# login user
# spring.rabbitmq.username=guest
# login password
# spring.rabbitmq.password=guest
# spring.rabbitmq.virtualhost=
# spring.rabbitmq.dynamic=


# ACTIVEMQ (ActiveMQProperties)
# URL of the ActiveMQ broker. Auto-generated by default. For instance `tcp://localhost:61616`
# spring.activemq.broker-url=
# Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.
# spring.activemq.in-memory=true
# Login password of the broker.
# spring.activemq.password=
# Login user of the broker.
# spring.activemq.user=
# Trust all packages.
# spring.activemq.packages.trust-all=false
# Comma-separated list of specific packages to trust (when not trusting all packages).
# spring.activemq.packages.trusted=
# See PooledConnectionFactory.
# spring.activemq.pool.configuration.*=
# Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.
# spring.activemq.pool.enabled=false
# Connection expiration timeout in milliseconds.
# spring.activemq.pool.expiry-timeout=0
# Connection idle timeout in milliseconds.
# spring.activemq.pool.idle-timeout=30000
# Maximum number of pooled
# spring.activemq.pool.max-connections=1
# 配置消息模型为pub/sub方式，在application.properties添加如下配置信息：
# 这里简单对这个配置说明下：如果为True，则是Topic；如果是false或者默认，则是queue
spring.jms.pub-sub-domain=true



server.session.persistent=true

#模板引擎：thymeleaf;
# spring.thymeleaf.cache=false
#Javascript 语言的模板引擎：Mustache
spring.mustache.cache=false
#模板引擎：velocity
spring.velocity.cache=false
#groovy模板
spring.groovy.template.cache=false


endpoints.default.web.enabled=true
endpoints.info.enabled=true
endpoints.beans.enabled=true
